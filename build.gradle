// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'pl.allegro.tech.build:axion-release-plugin:1.6.0'
    }
}

apply plugin: 'pl.allegro.tech.build.axion-release'

scmVersion {
    tag {
        prefix = 'lottie-show'
    }
    if (hasProperty('githubPersonalAccessToken'))
        repository {
            customUsername = project.githubPersonalAccessToken
        }
    versionCreator 'versionWithBranch'
    hooks {
        pre 'fileUpdate', [file: 'README.md', pattern: { v, p -> /version: $v/ }, replacement: { v, p -> "version: $v" }]
        pre 'commit', { v, p -> "Automatic update for release $v" }
        post 'push'
    }
}


ext {
    ciBuild = "true" == System.env['CI']

//    kotlinVersion = '1.1.1'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    compileSdkVersion = 25
    buildToolsVersion = '25.0.2'
    minSdkVersion = 21
    targetSdkVersion = 25
    retrolambdaVersion = '3.5.0'

    supportVersion = '25.3.1'
    daggerVersion = '2.10'
    intentBuilderVersion = '0.14.0'
    fragmentArgsVersion = '3.0.2'
    butterknifeVersion = '8.5.1'
    rxBindingsVersion = '1.0.1'

    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    assertjCoreVersion = '1.7.1'
    assertjAndroidVersion = '1.1.1'

    commonsLangVersion = '3.4'
    commonsCollectionsVersion = '4.1'
    commonsIoVersion = '2.5'
    autoValueVersion = '1.4'
    autoValueWither = 'com.gabrielittner.auto.value:auto-value-with:0.1.5'
    autoValueCursor = 'com.gabrielittner.auto.value:auto-value-cursor:0.5.0'
    autoValueCursorAnnotations = 'com.gabrielittner.auto.value:auto-value-cursor-annotations:0.5.0'
    autoValueParcel = 'com.ryanharter.auto.value:auto-value-parcel:0.2.2'
    autoValueParcelAdapter = 'com.ryanharter.auto.value:auto-value-parcel-adapter:0.2.2'

    rxJavaVersion = '1.2.7'
    rxJavaProguardVersion = '1.2.7.0'
    rxJavaString = 'io.reactivex:rxjava-string:1.1.0'
    rxAndroid = 'io.reactivex:rxandroid:1.2.1'

    lottieVersion = '1.5.3'

    leakCanaryVersion = '1.5'

    def calculateVersionCode = { String versionName ->
        def shortVersion = versionName.split("-", 2)[0]
        def strings = shortVersion.split("\\.", 3)
        def numbers = strings.collect {
            try {
                it.toInteger()
            } catch (ignored) {
                0
            }
        }
        while (numbers.size < 3) {
            numbers.add(0)
        }
        def result = 0
        numbers.eachWithIndex { number, i ->
            if (i < 3) {
                result = result * 1000 + number
            }
        }
        result
    }

}

allprojects {
    buildscript {
        repositories {
            jcenter()
        }
    }
    repositories {
        jcenter()
    }

    project.version = scmVersion.version
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
